import oqs
from cryptography.fernet import Fernet
from pprint import pprint
import hashlib
from time import sleep

def get_pwd(client_public_key):
    kex_alg = 'NewHope-1024-CCA'
    with oqs.KeyEncapsulation(kex_alg) as server:
        #this generates a key and encrypts it using client's public key
        ciphertext, shared_secret_server = server.encap_secret(client_public_key)
        print('Server Details')
        pprint(server.details)
        sleep(5)
        print('Ciphertext generated by server')
        print(ciphertext)
        print('Secret key generated by server')
        #printing this just for verification
        print(shared_secret_server)
        return ciphertext

def sign_msg():
    sig_alg = 'DILITHIUM_2'
    msg = 'Samsung Internship'.encode()
    with oqs.Signature(sig_alg) as server_signer:
        print('Server side Details')
        pprint(server_signer.details)
        pub_key = server_signer.generate_keypair()
        signature = server_signer.sign(msg)
        return pub_key, signature, msg

def pq_hash(file_name):
    BLOCK_SIZE = 65536
    hash_pq = hashlib.sha3_512()
    with open(file_name,'rb') as fs:
        file_block = fs.read(BLOCK_SIZE)
        while len(file_block) > 0:
            hash_pq.update(file_block)
            file_block = fs.read(BLOCK_SIZE)
        return hash_pq.hexdigest()

